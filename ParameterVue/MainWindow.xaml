<Window x:Name="mainWindow" Title="MainWindow"
		x:Class="ParameterVue.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
		xmlns:cp="clr-namespace:ParameterVue.WpfSupport.CustomXAMLProperties"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:familyInfo="clr-namespace:ParameterVue.FamilyManager.FamilyInfo"
		xmlns:familyManager="clr-namespace:ParameterVue.FamilyManager"
		xmlns:local="clr-namespace:ParameterVue"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:support="clr-namespace:ParameterVue.WpfSupport"
		xmlns:support1="clr-namespace:ParameterVue.FamilyManager.Support"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Width="700"
		Height="850"
		DataContext="{Binding ElementName=mainWindow}"
		Loaded="MainWindow_Loaded"
		mc:Ignorable="d"
		Background="#333333"
		>
	<Window.Resources>

		<FontFamily x:Key="FontFamily"
				>
			Cooper Black
		</FontFamily>
		<sys:Double x:Key="FontSize"
				>
			10
		</sys:Double>
		<FontStretch x:Key="FontStretch"
				>
			Normal
		</FontStretch>

		<support:Font x:Key="Font1"
				FontFamily="Cooper Black"
				FontSize="16.0"
				FontWeight="Bold"
				/>


		<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"
				/>
		<support1:RowToIndexConverter x:Key="RowToIndexConverter"
				/>
		<support1:CellColToIndexConverter x:Key="CellColToIndex"
				/>
		<support1:CellRowToIndexConverter x:Key="CellRowToIndex"
				/>
		<support1:TestConverter x:Key="TestConverter"
				/>

		<Style x:Key="RowDetailLabel"
				TargetType="Label"
				>
			<Setter Property="FontSize" Value="8" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<Style x:Key="{x:Static local:MainWindow.ColHeaderTbkStyleName}"
				TargetType="{x:Type TextBlock}"
				>
			<Setter Property="FontFamily" Value="{Binding (cp:CustomProperties.GenericFont).FontFamily, FallbackValue={StaticResource FontFamily}, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
			<Setter Property="FontSize" Value="{Binding (cp:CustomProperties.GenericFont).FontSize, FallbackValue={StaticResource FontSize}, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
			<Setter Property="FontStretch" Value="{Binding (cp:CustomProperties.GenericFont).FontStretch, FallbackValue={StaticResource FontStretch}, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
			<Setter Property="FontStyle" Value="{Binding lbc.HeaderFont.FontStyle, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontWeight" Value="{Binding lbc.HeaderFont.FontWeight, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="Foreground" Value="{Binding lbc.HeaderFont.Foreground, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="Padding" Value="2,4,2,4" />
			<Setter Property="TextWrapping" Value="Wrap" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
		</Style>

		<Style x:Key="ColHeaderSymb"
				TargetType="{x:Type TextBlock}"
				BasedOn="{StaticResource {x:Static local:MainWindow.ColHeaderTbkStyleName}}"
				>
			<Setter Property="FontFamily" Value="{Binding lbc.SymbolFont.FontFamily, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontSize" Value="{Binding lbc.SymbolFont.FontSize, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStretch" Value="{Binding lbc.SymbolFont.FontStretch, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStyle" Value="{Binding lbc.SymbolFont.FontStyle, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontWeight" Value="{Binding lbc.SymbolFont.FontWeight, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="Foreground" Value="{Binding lbc.SymbolFont.Foreground, ElementName=mainWindow, Mode=OneWay}" />
		</Style>

		<Style x:Key="FieldBase"
				TargetType="{x:Type TextBox}"
				>
			<Setter Property="BorderBrush" Value="White" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="TextWrapping" Value="Wrap" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Style.Triggers>
				<Trigger Property="cp:CustomProperties.GenericBoolOne" Value="True">
					<Setter Property="Foreground" Value="Red" />
				</Trigger>
				<Trigger Property="cp:CustomProperties.ErrorFlag" Value="True">
					<Setter Property="BorderBrush" Value="OrangeRed" />
					<Setter Property="BorderThickness" Value="2" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="{x:Static local:MainWindow.RowHeaderTbxStyleName}"
				TargetType="{x:Type TextBox}"
				BasedOn="{StaticResource FieldBase}"
				>
			<Setter Property="FontFamily" Value="{Binding lbc.RowHeaderFont.FontFamily, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontSize" Value="{Binding lbc.RowHeaderFont.FontSize, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStretch" Value="{Binding lbc.RowHeaderFont.FontStretch, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStyle" Value="{Binding lbc.RowHeaderFont.FontStyle, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontWeight" Value="{Binding lbc.RowHeaderFont.FontWeight, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="Foreground" Value="{Binding lbc.RowHeaderFont.Foreground, ElementName=mainWindow, Mode=OneWay}" />
		</Style>

		<Style x:Key="{x:Static local:MainWindow.FieldTbxStyleName}"
				TargetType="{x:Type TextBox}"
				BasedOn="{StaticResource FieldBase}"
				>
			<Setter Property="FontFamily" Value="{Binding lbc.FieldFont.FontFamily, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontSize" Value="{Binding lbc.FieldFont.FontSize, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStretch" Value="{Binding lbc.FieldFont.FontStretch, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontStyle" Value="{Binding lbc.FieldFont.FontStyle, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="FontWeight" Value="{Binding lbc.FieldFont.FontWeight, ElementName=mainWindow, Mode=OneWay}" />
			<Setter Property="Foreground" Value="{Binding lbc.FieldFont.Foreground, ElementName=mainWindow, Mode=OneWay}" />

		</Style>

		<Style x:Key="ColumnHeaderGripperStyle"
				TargetType="{x:Type Thumb}"
				>
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Cursor" Value="SizeWE" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type Thumb}"
							>
						<Border
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Width" Value="8" />
		</Style>

		<Style x:Key="DataGridColumnHeaderStyle1"
				TargetType="{x:Type DataGridColumnHeader}"
				>
			<Setter Property="ContentTemplate" Value="{DynamicResource HeaderDataTemplate1}" />
			<Setter Property="Margin" Value="3,1,3,1" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridColumnHeader}"
							>
						<Grid Name="GridInner1"
								>
							<Themes:DataGridHeaderBorder
									Padding="{TemplateBinding Padding}"
									SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
									SortDirection="{TemplateBinding SortDirection}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SeparatorBrush="{TemplateBinding SeparatorBrush}"
									IsClickable="{TemplateBinding CanUserSort}"
									IsHovered="{TemplateBinding IsMouseOver}"
									IsPressed="{TemplateBinding IsPressed}"
									>

								<ContentPresenter
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper"
									HorizontalAlignment="Left"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
							<Thumb x:Name="PART_RightHeaderGripper"
									HorizontalAlignment="Right"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>

		<DataTemplate x:Key="HeaderDataTemplate1"
				DataType="{x:Type local:HeaderInfo}"
				>
			<Grid>
				<TextBlock
						Text="{Binding}"
						/>
			</Grid>
		</DataTemplate>

		<Style x:Key="DataGridColumnHeaderStyle2"
				TargetType="{x:Type DataGridColumnHeader}"
				>
			<Setter Property="ContentTemplate" Value="{DynamicResource HeaderDataTemplate2}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridColumnHeader}"
							>
						<Grid>
							<Themes:DataGridHeaderBorder
									Padding="{TemplateBinding Padding}"
									SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
									SortDirection="{TemplateBinding SortDirection}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SeparatorBrush="{TemplateBinding SeparatorBrush}"
									IsClickable="{TemplateBinding CanUserSort}"
									IsHovered="{TemplateBinding IsMouseOver}"
									IsPressed="{TemplateBinding IsPressed}"
									>

								<ContentPresenter
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper"
									HorizontalAlignment="Left"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
							<Thumb x:Name="PART_RightHeaderGripper"
									HorizontalAlignment="Right"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>

		<DataTemplate x:Key="HeaderDataTemplate2"
				DataType="{x:Type local:HeaderInfo}"
				>
			<Grid>
				<Grid.Resources>
					<sys:Double x:Key="FtSz"
							>
						10
					</sys:Double>
					<FontFamily x:Key="FtFam"
							>
						Arial
					</FontFamily>
					<FontStretch x:Key="FtStr"
							>
						Normal
					</FontStretch>
					<FontStyle x:Key="FtSty"
							>
						Normal
					</FontStyle>
					<FontWeight x:Key="Ftw"
							>
						Normal
					</FontWeight>
					<SolidColorBrush x:Key="Ftb"
							>
						White
					</SolidColorBrush>
				</Grid.Resources>
				<TextBlock
						FontFamily="{Binding font.FontFamily, FallbackValue={StaticResource FtFam}, Mode=OneWay}"
						FontSize="{Binding font.FontSize, FallbackValue={StaticResource FtSz}, Mode=OneWay}"
						FontStretch="{Binding font.FontStretch, FallbackValue={StaticResource FtStr}, Mode=OneWay}"
						FontStyle="{Binding font.FontStyle, FallbackValue={StaticResource FtSty}, Mode=OneWay}"
						FontWeight="{Binding font.FontWeight, FallbackValue={StaticResource Ftw}, Mode=OneWay}"
						Text="{Binding title, FallbackValue='none', Mode=OneWay, TargetNullValue='null'}"
						TextWrapping="Wrap"
						Foreground="{Binding font.Foreground, FallbackValue={StaticResource Ftb}, Mode=OneWay}"
						/>


			</Grid>
		</DataTemplate>


		<Style x:Key="DataGridColumnHeaderStyle3"
				TargetType="{x:Type DataGridColumnHeader}"
				>
			<Setter Property="ContentTemplate" Value="{DynamicResource HeaderTemplate1}" />
			<Setter Property="Margin" Value="3,1,3,1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridColumnHeader}"
							>
						<Grid Name="GridInner3"
								>
							<Themes:DataGridHeaderBorder
									Padding="{TemplateBinding Padding}"
									SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
									SortDirection="{TemplateBinding SortDirection}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SeparatorBrush="{TemplateBinding SeparatorBrush}"
									IsClickable="{TemplateBinding CanUserSort}"
									IsHovered="{TemplateBinding IsMouseOver}"
									IsPressed="{TemplateBinding IsPressed}"
									>
								<ContentPresenter
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper"
									HorizontalAlignment="Left"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
							<Thumb x:Name="PART_RightHeaderGripper"
									HorizontalAlignment="Right"
									Style="{StaticResource ColumnHeaderGripperStyle}"
									/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>


		<DataTemplate x:Key="HeaderTemplate1"
				DataType="{x:Type familyInfo:ColumnSpec}"
				>
			<Grid>
				<Grid.Resources>
					<sys:Double x:Key="FtSz"
							>
						10
					</sys:Double>
					<FontFamily x:Key="FtFam"
							>
						Arial
					</FontFamily>
					<FontStretch x:Key="FtStr"
							>
						Normal
					</FontStretch>
					<FontStyle x:Key="FtSty"
							>
						Normal
					</FontStyle>
					<FontWeight x:Key="Ftw"
							>
						Normal
					</FontWeight>
					<SolidColorBrush x:Key="Ftb"
							>
						Black
					</SolidColorBrush>
				</Grid.Resources>
				<StackPanel>
					<TextBlock Name="HeaderBlk"
							Margin="3,0,3,0"
							Width="60"
							VerticalAlignment="Bottom"
							FontFamily="{Binding HeaderFont.FontFamily, FallbackValue={StaticResource FtFam}, Mode=OneWay}"
							FontSize="{Binding HeaderFont.FontSize, FallbackValue={StaticResource FtSz}, Mode=OneWay}"
							FontStretch="{Binding HeaderFont.FontStretch, FallbackValue={StaticResource FtStr}, Mode=OneWay}"
							FontStyle="{Binding HeaderFont.FontStyle, FallbackValue={StaticResource FtSty}, Mode=OneWay}"
							FontWeight="{Binding HeaderFont.FontWeight, FallbackValue={StaticResource Ftw}, Mode=OneWay}"
							Text="{Binding Path=ColumnTitle, FallbackValue='None2', Mode=OneWay}"
							TextWrapping="Wrap"
							Foreground="{Binding HeaderFont.Foreground, FallbackValue={StaticResource Ftb}, Mode=OneWay}"
							/>

				</StackPanel>

			</Grid>
		</DataTemplate>



		<Style x:Key="RowHeaderGripperStyle"
				TargetType="{x:Type Thumb}"
				>
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Cursor" Value="SizeNS" />
			<Setter Property="Height" Value="8" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type Thumb}"
							>
						<Border
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="row"
				TargetType="Control"
				>
			<Setter Property="Background" Value="Red" />

		</Style>

		<Style x:Key="DataGridRowHeaderStyle1"
				TargetType="{x:Type DataGridRowHeader}"
				>
			<Setter Property="ContentTemplate" Value="{DynamicResource RowHeaderTemplate1}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridRowHeader}"
							>
						<Grid>
							<Themes:DataGridHeaderBorder
									Padding="{TemplateBinding Padding}"
									Orientation="Horizontal"
									SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SeparatorBrush="{TemplateBinding SeparatorBrush}"
									IsHovered="{TemplateBinding IsMouseOver}"
									IsPressed="{TemplateBinding IsPressed}"
									IsSelected="{TemplateBinding IsRowSelected}"
									>
								<StackPanel
										Orientation="Horizontal"
										>
									<ContentPresenter
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
									<Control Name="RowControl"
											SnapsToDevicePixels="false"
											Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
											Style="{StaticResource row}"
											Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
											/>
								</StackPanel>
							</Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_TopHeaderGripper"
									VerticalAlignment="Top"
									Style="{StaticResource RowHeaderGripperStyle}"
									/>
							<Thumb x:Name="PART_BottomHeaderGripper"
									VerticalAlignment="Bottom"
									Style="{StaticResource RowHeaderGripperStyle}"
									/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<DataTemplate x:Key="RowHeaderTemplate1"
				DataType="{x:Type familyInfo:FamilyData}"
				>
			<Grid
					d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																					 Type={x:Type DataGridRow}}"
					DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}}"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="30" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition Width="60" />
				</Grid.ColumnDefinitions>
				<TextBlock
						Grid.Column="0"
						Text="{Binding Converter={StaticResource RowToIndexConverter}}"
						Foreground="Black"
						/>
				<CheckBox
						Grid.Column="1"
						IsChecked="{Binding Item.Selected, FallbackValue='true', Mode=TwoWay}"
						/>
				<TextBlock
						Grid.Column="2"
						Text="{Binding Item.FamilyName, FallbackValue='none', Mode=OneWay}"
						/>

			</Grid>
		</DataTemplate>


		<Style x:Key="DataGrid2CellStyle1"
				TargetType="{x:Type DataGridCell}"
				>
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="ContentTemplate" Value="{DynamicResource DataGrid2CellTemplate1}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridCell}"
							>
						<Border
								SnapsToDevicePixels="True"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
							<ContentPresenter
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
				</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="True">
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsSelected" Value="true" />
						<Condition Property="Selector.IsSelectionActive" Value="false" />
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
				</MultiTrigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<DataTemplate x:Key="DataGrid2CellTemplate1"
				DataType="{x:Type familyInfo:FamilyData}"
				>
			<Grid>
				<StackPanel>
					<TextBlock Name="Cell2Blk1"
							Margin="3,0,3,0"
							Width="60"
							VerticalAlignment="Bottom"
							Text="{Binding Path=ParameterValues/ParamValue}"
							TextWrapping="Wrap"
							/>
					<!--  Text="{Binding Path=ParameterValues/ParamValue, Converter={StaticResource TestConverter}}"  -->
					<StackPanel
							Orientation="Horizontal"
							>

						<TextBlock Name="Cell2BlkCol"
								Margin="3,0,3,0"
								Width="30"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								cp:CustomProperties.GenericObjectOne="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
								Tag="{Binding UpdateColumn, ElementName=mainWindow}"
								TextAlignment="Center"
								TextWrapping="Wrap"
								>
							<TextBlock.Text>
								<MultiBinding
										Converter="{StaticResource CellColToIndex}"
										Mode="OneWay"
										>
									<Binding
											Path="Width"
											RelativeSource="{RelativeSource Self}"
											/>
									<Binding
											Path="Tag"
											RelativeSource="{RelativeSource Self}"
											/>
									<Binding
											Path="(cp:CustomProperties.GenericObjectOne)"
											RelativeSource="{RelativeSource Self}"
											/>

								</MultiBinding>
							</TextBlock.Text>

						</TextBlock>

						<TextBlock Name="Cell2BlkRow"
								Margin="3,0,3,0"
								Width="30"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								cp:CustomProperties.GenericObjectOne="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
								Text="{Binding Path=(cp:CustomProperties.GenericObjectOne), RelativeSource={RelativeSource Self}, Converter={StaticResource CellRowToIndex}, Mode=TwoWay}"
								TextAlignment="Center"
								TextWrapping="Wrap"
								/>
					</StackPanel>
				</StackPanel>
			</Grid>
		</DataTemplate>



		<DataTemplate x:Key="dt"
				>
			<StackPanel
					Orientation="Vertical"
					>
				<StackPanel
						Orientation="Horizontal"
						>
					<Label Content="R:"
							Margin="1,0,1,0"
							Padding="0"
							/>
					<TextBlock Name="Cell2BlkRow"
							Margin="0,0,3,0"
							Width="20"
							Padding="0"
							HorizontalAlignment="Center"
							cp:CustomProperties.GenericObjectOne="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
							Text="{Binding Path=(cp:CustomProperties.GenericObjectOne), RelativeSource={RelativeSource Self}, Converter={StaticResource CellRowToIndex}, Mode=TwoWay}"
							TextAlignment="Center"
							TextWrapping="Wrap"
							/>
					<Label Content="C:"
							Margin="1,0,1,0"
							Padding="0"
							/>
					<TextBlock Name="Cell2BlkCol"
							Margin="0,0,3,0"
							Width="20"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							cp:CustomProperties.GenericObjectOne="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
							Tag="{Binding UpdateColumn, ElementName=mainWindow}"
							TextAlignment="Center"
							TextWrapping="Wrap"
							>
						<TextBlock.Text>
							<MultiBinding
									Converter="{StaticResource CellColToIndex}"
									Mode="OneWay"
									>
								<Binding
										Path="Tag"
										RelativeSource="{RelativeSource Self}"
										/>
								<Binding
										Path="(cp:CustomProperties.GenericObjectOne)"
										RelativeSource="{RelativeSource Self}"
										/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</StackPanel>
				<StackPanel
						Orientation="Horizontal"
						>
					<Label Content="R:"
							Margin="1,0,1,0"
							Padding="0"
							/>
					<Label Content="{Binding Path=DataContext.ParameterValues/Row, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
							Margin="1,0,1,0"
							Padding="0"
							Width="20"
							HorizontalContentAlignment="Center"
							/>
					<Label Content="C:"
							Margin="1,0,1,0"
							Padding="0"
							/>
					<Label Content="{Binding Path=DataContext.ParameterValues/Col, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}"
							Margin="1,0,1,0"
							Padding="0"
							Width="20"
							HorizontalContentAlignment="Center"
							/>

				</StackPanel>
			</StackPanel>
		</DataTemplate>

		<Style x:Key="DataGridCellStyle2"
				TargetType="{x:Type DataGridCell}"
				>
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="BorderThickness" Value="1" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridCell}"
							>
						<Border
								SnapsToDevicePixels="True"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
							<StackPanel
									Orientation="Vertical"
									>
								<ContentPresenter
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
								<ContentControl
										ContentTemplate="{StaticResource dt}"
										/>
							</StackPanel>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
				</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="True">
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsSelected" Value="true" />
						<Condition Property="Selector.IsSelectionActive" Value="false" />
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
				</MultiTrigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
				</Trigger>
			</Style.Triggers>
		</Style>




		<Style x:Key="DataGridRowStyle1"
				TargetType="{x:Type DataGridRow}"
				>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate
							TargetType="{x:Type DataGridRow}"
							>
						<Border x:Name="DGR_Border"
								SnapsToDevicePixels="True"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
							<SelectiveScrollingGrid>
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter
										Grid.Column="1"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										ItemsPanel="{TemplateBinding ItemsPanel}"
										/>
								<DataGridDetailsPresenter
										Grid.Row="1"
										Grid.Column="1"
										SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										Visibility="{TemplateBinding DetailsVisibility}"
										/>
								<DataGridRowHeader
										Grid.Row="0"
										Grid.RowSpan="2"
										Grid.Column="0"
										SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
										Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										Style="{StaticResource DataGridRowHeaderStyle1}"
										/>
							</SelectiveScrollingGrid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
			<Setter Property="ValidationErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<TextBlock
								Margin="2,0,0,0"
								VerticalAlignment="Center"
								Text="!"
								Foreground="Red"
								/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsNewItem" Value="True">
					<Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
				</Trigger>
			</Style.Triggers>
		</Style>

	</Window.Resources>

	<Grid
			Margin="0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="105" />

		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="130" />
			<RowDefinition Height="130" />
			<RowDefinition Height="1*" />
			<RowDefinition />
			<RowDefinition />

		</Grid.RowDefinitions>

		<TextBlock x:Name="textBlock"
				Grid.Row="0"
				Grid.Column="1"
				Width="0"
				Height="0"
				Text="1"
				/>

		<!--#region > Listbox-->

		<Button x:Name="buttonTest2" Content="Test 2"
				Grid.Row="0"
				Grid.Column="1"
				Margin="0,0,10.4,82.6"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				RenderTransformOrigin="0.516,0.494"
				Click="Button_Test2"
				/>
		<Button x:Name="buttonTest1" Content="Test 1"
				Grid.Row="0"
				Grid.Column="1"
				Margin="0,0,10.4,43.6"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test1"
				/>
		<Button x:Name="button" Content="Debug"
				Grid.Row="0"
				Grid.Column="1"
				Margin="0,0,10.2,5"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="btnDebug_Click"
				/>

		<ScrollViewer
				Grid.Row="0"
				Grid.Column="0"
				Margin="0,0,0,5"
				HorizontalScrollBarVisibility="Visible"
				VerticalScrollBarVisibility="Auto"
				>
			<!--  VerticalAlignment="Stretch"  -->
			<!--  HorizontalAlignment="Stretch"  -->
			<!--  VerticalAlignment="top"  -->
			<ListBox x:Name="listBox"
					HorizontalContentAlignment="Stretch"
					VerticalContentAlignment="Stretch"
					d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																					 Type={x:Type local:MainWindow}}"
					Background="#444444"
					Foreground="White"
					ItemsSource="{Binding Fm.Fd}"
					>
				<ListBox.Template>
					<ControlTemplate>
						<DockPanel>
							<Border
									MaxHeight="50"
									DockPanel.Dock="Top"
									BorderThickness="2"
									BorderBrush="RoyalBlue"
									>
								<!--  name cannot be from a resource  -->
								<Grid x:Name="header"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="20" />
										<ColumnDefinition Width="*" />
										<!-- <ColumnDefinition Width="*" /> -->
									</Grid.ColumnDefinitions>
									<TextBlock
											Grid.Column="0"
											Text="{Binding Fm.Cd.Selected.ColumnTitle, Mode=OneTime}"
											Style="{StaticResource ColHeaderSymb}"
											/>
									<TextBlock
											Grid.Column="1"
											cp:CustomProperties.GenericFont="{Binding Fm.Cd.ColumnSpecs[0].HeaderFont}"
											Text="{Binding Fm.Cd.FamilyName.ColumnTitle, Mode=OneTime}"
											TextWrapping="Wrap"
											Style="{DynamicResource {x:Static local:MainWindow.ColHeaderTbkStyleName}}"
											/>
									<!--  Style="{StaticResource ColHeaderTbk}"  -->

								</Grid>

							</Border>
							<ItemsPresenter x:Name="ItemsPresenter"
									Margin="0,0,0,0"
									DockPanel.Dock="Bottom"
									/>
						</DockPanel>
					</ControlTemplate>
				</ListBox.Template>
				<ListBox.ItemTemplate>
					<DataTemplate
							DataType="{x:Type familyInfo:FamilyData}"
							>
						<!--  name cannot be fom a resource  -->
						<Grid x:Name="data"
								Margin="-4,0,0,0"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20" />
								<!-- <ColumnDefinition Width="100" /> -->
								<ColumnDefinition Width="*" />

								<!-- <ColumnDefinition Width="*" /> -->
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="20" />
							</Grid.RowDefinitions>
							<CheckBox
									Grid.Column="0"
									Margin="0,0,3,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									IsChecked="{Binding Selected}"
									/>
							<TextBox
									Grid.Column="1"
									Text="{Binding FamilyName}"
									Style="{DynamicResource {x:Static local:MainWindow.RowHeaderTbxStyleName}}"
									/>
							<!--  Style="{StaticResource RowHeaderTbx}"  -->

							<!--  <TextBox  -->
							<!--  Grid.Column="2"  -->
							<!--  cp:CustomProperties.GenericBoolOne="{Binding ParameterValues[0].Revised}"  -->
							<!--  cp:CustomProperties.ErrorFlag="{Binding ParameterValues[0].Invalid}"  -->
							<!--  Text="{Binding ParameterValues[0].ParamValue}"  -->
							<!--  Style="{DynamicResource {x:Static local:MainWindow.FieldTbxStyleName}}"  -->
							<!--    -->
							<!--  />  -->

						</Grid>

					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</ScrollViewer>
		<!--#endregion-->

		<!--#region > Datagrid 1-->
		<DataGrid x:Name="dataGrid1"
				Grid.Row="1"
				Margin="0,0,0,5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				d:DataContext="{d:DesignInstance Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				AutoGenerateColumns="True"
				ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
				ItemsSource="{Binding Fm.Fd}"
				/>
		<Button x:Name="buttonTest11" Content="Test 11"
				Grid.Row="1"
				Grid.Column="1"
				Margin="0,0,10.2,10"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test11"
				/>
		<Button x:Name="buttonTest12" Content="Test 12"
				Grid.Row="1"
				Grid.Column="1"
				Margin="0,0,10.2,49"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test12"
				/>
		<Button x:Name="buttonTest13" Content="Test 13"
				Grid.Row="1"
				Grid.Column="1"
				Margin="0,0,10.2,88"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test13"
				/>
		<!--#endregion-->

		<Button x:Name="buttonTestDb" Content="Debug"
				Grid.Row="4"
				Grid.Column="1"
				Margin="0,0,10.2,10"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Debug"
				/>

		<DataGrid x:Name="dataGrid3"
				Grid.Row="3"
				Margin="0,0,0,10"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontSize="8"
				d:DataContext="{d:DesignInstance d:Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				AutoGenerateColumns="True"
				AutoGeneratingColumn="DataGrid3_AutoGeneratingColumn"
				RowDetailsVisibilityMode="Visible"
				ItemsSource="{Binding Fm.Fd}"
				>
			<DataGrid.RowDetailsTemplate>
				<DataTemplate>
					<Border
							BorderThickness="1"
							BorderBrush="Red"
							>
						<DataGrid
								Height="Auto"
								HorizontalAlignment="Stretch"
								AutoGenerateColumns="True"
								ItemsSource="{Binding ParameterValues}"
								/>
					</Border>
				</DataTemplate>
			</DataGrid.RowDetailsTemplate>
		</DataGrid>

		<DataGrid x:Name="dataGrid4"
				Grid.Row="4"
				Grid.Column="0"
				Margin="0,0,0,5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontSize="8"
				d:DataContext="{d:DesignInstance d:Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				AutoGenerateColumns="True"
				AutoGeneratingColumn="DataGrid4_AutoGeneratingColumn"
				ColumnWidth="Auto"
				RowDetailsVisibilityMode="Visible"
				ItemsSource="{Binding Fm.Cd}"
				>

			<DataGrid.RowDetailsTemplate>
				<DataTemplate
						DataType="{x:Type familyInfo:ColumnSpec}"
						>
					<Grid
							Height="52"
							>
						<Grid.RowDefinitions>
							<RowDefinition Height="12" />
							<RowDefinition Height="12" />
							<RowDefinition Height="12" />
							<RowDefinition Height="12" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="50" />

							<ColumnDefinition Width="45" />
							<ColumnDefinition Width="45" />
							<ColumnDefinition Width="45" />
							<ColumnDefinition Width="45" />
							<ColumnDefinition Width="45" />
							<ColumnDefinition Width="60" />

						</Grid.ColumnDefinitions>


						<Border
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="0"
								BorderThickness="1"
								BorderBrush="Blue"
								>
							<Label
									Style="{StaticResource RowDetailLabel}"
									>
								<TextBlock
										TextWrapping="Wrap"
										>
									Header Font
								</TextBlock>
							</Label>
						</Border>

						<Label
								Grid.Row="0"
								Grid.Column="1"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font family"
									TextWrapping="Wrap"
									/>
						</Label>

						<Label Content="{Binding HeaderFont.FontFamily}"
								Grid.Row="1"
								Grid.Column="1"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="0"
								Grid.Column="2"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font size"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding HeaderFont.FontSize}"
								Grid.Row="1"
								Grid.Column="2"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="0"
								Grid.Column="3"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font stretch"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding HeaderFont.FontStretch}"
								Grid.Row="1"
								Grid.Column="3"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="0"
								Grid.Column="4"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font style"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding HeaderFont.FontStyle}"
								Grid.Row="1"
								Grid.Column="4"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="0"
								Grid.Column="5"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font weight"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding HeaderFont.FontWeight}"
								Grid.Row="1"
								Grid.Column="5"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="0"
								Grid.Column="6"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="foreground"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding HeaderFont.Foreground}"
								Grid.Row="1"
								Grid.Column="6"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Border
								Grid.Row="2"
								Grid.RowSpan="2"
								Grid.Column="0"
								BorderThickness="1"
								BorderBrush="Chartreuse"
								>
							<Label
									Style="{StaticResource RowDetailLabel}"
									>
								<TextBlock
										TextWrapping="Wrap"
										>
									Header Font
								</TextBlock>
							</Label>
						</Border>

						<Label
								Grid.Row="2"
								Grid.Column="1"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font family"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.FontFamily}"
								Grid.Row="3"
								Grid.Column="1"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="2"
								Grid.Column="2"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font size"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.FontSize}"
								Grid.Row="3"
								Grid.Column="2"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="2"
								Grid.Column="3"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font stretch"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.FontStretch}"
								Grid.Row="3"
								Grid.Column="3"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="2"
								Grid.Column="4"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font style"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.FontStyle}"
								Grid.Row="3"
								Grid.Column="4"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="2"
								Grid.Column="5"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="font weight"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.FontWeight}"
								Grid.Row="3"
								Grid.Column="5"
								Style="{StaticResource RowDetailLabel}"
								/>

						<Label
								Grid.Row="2"
								Grid.Column="6"
								Style="{StaticResource RowDetailLabel}"
								>
							<TextBlock
									Text="foreground"
									TextWrapping="Wrap"
									/>
						</Label>
						<Label Content="{Binding FieldFont.Foreground}"
								Grid.Row="3"
								Grid.Column="6"
								Style="{StaticResource RowDetailLabel}"
								/>

					</Grid>
				</DataTemplate>
			</DataGrid.RowDetailsTemplate>
		</DataGrid>

		<!--#region > Datagrid 2-->

		<Button x:Name="buttonTest21" Content="Test 21"
				Grid.Row="2"
				Grid.Column="1"
				Margin="0,0,10.2,10"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test21"
				/>
		<Button x:Name="buttonTest22" Content="Test 22"
				Grid.Row="2"
				Grid.Column="1"
				Margin="0,0,10.2,49"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test22"
				/>
		<Button x:Name="buttonTest23" Content="Test 23"
				Grid.Row="2"
				Grid.Column="1"
				Margin="0,0,10.2,88"
				Width="84"
				Height="34"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Test23"
				/>

		<Label Name="py" Content="{Binding Fm.Cd.FamilyName.ColumnTitle}"
				Grid.Row="4"
				Grid.Column="1"
				VerticalAlignment="Top"
				FontSize="10"
				d:DataContext="{d:DesignInstance Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				Background="White"
				Foreground="Black"
				/>

		<Label Content="label"
				Grid.Row="4"
				Grid.Column="1"
				Margin="0,30,0,0"
				VerticalAlignment="Top"
				FontSize="10"
				d:DataContext="{d:DesignInstance Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				Background="White"
				Foreground="Black"
				/>


		<DataGrid x:Name="dataGrid2"
				Grid.Row="2"
				Grid.Column="0"
				Margin="0,0,0,10"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				d:DataContext="{d:DesignInstance Type=local:MainWindow,
																				 IsDesignTimeCreatable=True}"
				AreRowDetailsFrozen="False"
				AutoGenerateColumns="False"
				CanUserAddRows="{Binding Fm.CanUserAddRows, FallbackValue=False, Mode=OneWay}"
				CanUserDeleteRows="{Binding Fm.CanUserDeleteRows, FallbackValue=false, Mode=OneWay}"
				CellStyle="{StaticResource DataGridCellStyle2}"
				ColumnReordered="DataGrid2_OnColumnReordered"
				ColumnWidth="Auto"
				EnableColumnVirtualization="False"
				HeadersVisibility="All"
				HorizontalScrollBarVisibility="Visible"
				RowStyle="{DynamicResource DataGridRowStyle1}"
				VerticalScrollBarVisibility="Visible"
				IsSynchronizedWithCurrentItem="True"
				ItemsSource="{Binding Fm.Fd}"
				>
			<!--  CellStyle="{StaticResource DataGrid2CellStyle1}"  -->
			<!--  RowHeaderStyle="{StaticResource DataGridRowHeaderStyle1}"  -->
			<!--  RowHeaderTemplate="{DynamicResource RowHeaderTemplate1}"  -->
			<!--  ItemsSource="{Binding DataContext.Fd}"  -->
			<DataGrid.Columns>
				<DataGridTextColumn
						Binding="{Binding ParameterValues[0].ParamValue}"
						>
					<DataGridTextColumn.Header>
						<DataGridColumnHeader
								Style="{StaticResource DataGridColumnHeaderStyle3}"
								>
							<DataGridColumnHeader.Content>
								<Binding
										Path="Fm.Cd.ColumnSpecs[0]"
										/>
							</DataGridColumnHeader.Content>
						</DataGridColumnHeader>
					</DataGridTextColumn.Header>

				</DataGridTextColumn>

			</DataGrid.Columns>

		</DataGrid>

		<!--#endregion-->

	</Grid>

</Window>
